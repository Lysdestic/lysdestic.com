---
import '@fontsource/rokkitt'
import '@fontsource/rokkitt/variable.css'
import LinkNewTab from './LinkNewTab.astro'
import { Icon } from 'astro-icon'

type ProjectLink = {
  content: string
  url: string
  src: string
  icon: string
}

const { title, description, label, imageUrl, imageAlt, links } = Astro.props
---

<li id={label}>
  <h2>{title}</h2>
  <p set:html={description}>{description}</p>
  <div class="content-container">
    <img src={imageUrl} alt={imageAlt} />
    <div class="link-container">
      {
        links.map((item: ProjectLink) => (
          <LinkNewTab link={item.url} class={'deploy-link'}>
            <Icon name={item.icon} />
            {item.content}
          </LinkNewTab>
        ))
      }
    </div>
  </div>
</li>

<style>
  [astro-icon] {
    width: 1.5rem;
  }

  .content-container {
    display: flex;
    flex-direction: column-reverse;
    gap: 2rem;
  }

  .link-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    gap: 0.5rem;
    width: 100%;
  }

  .deploy-link {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: 0.5rem;
    width: 48%;
    min-width: fit-content;
    padding: 0.5rem;
    border-radius: 5px;
    outline-color: var(--dark);
    outline-style: solid;
    outline-width: 1px;
    box-shadow: 2px 2px 1px var(--dark);
  }

  .deploy-link:hover,
  .deploy-link:focus {
    background-color: var(--dark);
    color: var(--light);
    outline-width: 0;
    border-radius: 5px;
    transition: background ease-out 200ms;
    box-shadow: 3px 3px 5px var(--dark);
  }

  li {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 2rem 0;
    list-style: none;
  }

  h2 {
    margin: 0;
    padding: 0;
    font-family: 'Rokkitt', serif;
    font-size: 3rem;
    overflow: hidden;
  }

  h2:after {
    display: inline-block;
    width: 75%;
    height: 0.3rem;
    position: relative;
    content: '';
    background-color: var(--dark);
    vertical-align: middle;
    margin-right: -50%;
    left: 1rem;
  }

  img {
    width: 100%;
    box-shadow: 2px 2px 1px var(--mid);
  }

  @media screen and (min-width: 600px) {
    [astro-icon] {
      width: 2rem;
    }

    .content-container {
      flex-direction: row;
    }

    .link-container {
      flex-direction: column;
      justify-content: center;
      padding-inline-start: 2rem;
      gap: 2rem;
    }

    .deploy-link {
      gap: 1rem;
      padding: 1rem 1.5rem;
      font-size: 2rem;
      outline-width: 2px;
      box-shadow: 3px 3px 1px var(--dark);
    }

    li {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      padding: 2rem 0;
      list-style: none;
    }

    h2 {
      margin: 2rem 0;
      padding: 0;
      text-align: center;
      font-family: 'Rokkitt', serif;
      font-size: 4rem;
      overflow: hidden;
    }

    h2:before,
    h2:after {
      display: inline-block;
      width: 50%;
      height: 10px;
      position: relative;
      content: '';
      background-color: var(--dark);
      vertical-align: middle;
    }

    h2:before {
      margin-left: -50%;
      right: 2rem;
    }

    h2:after {
      margin-right: -50%;
      left: 2rem;
    }

    img {
      width: 50%;
      transition: all ease-in 200ms;
      transition-delay: 100ms;
      box-shadow: 3px 3px 2px var(--mid);
    }

    img:hover,
    img:focus {
      transition: all ease-out 200ms;
      transform: translate(-1px, -1px);
      box-shadow: 5px 5px 9px var(--mid);
    }
  }

  @media (prefers-color-scheme: dark) {
    .deploy-link {
      outline-color: var(--light);
    }

    .deploy-link:hover,
    .deploy-link:focus {
      background-color: var(--light);
      color: var(--dark);
    }

    h2:before,
    h2:after {
      background-color: var(--light);
    }

    img {
      box-shadow: 3px 3px 2px #111;
    }

    img:hover,
    img:focus {
      box-shadow: 5px 5px 9px #111;
    }
  }
</style>
